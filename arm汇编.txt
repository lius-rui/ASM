１、ARM汇编常用条件码助记符
	EQ	      相等									LS       无符号数小于等于
	NE	      不相等									GE       带符号数大于等于
	CS/HS  	  无符号数大于/等于						LT 		 带符号数小于
	CC/LO     无符号数小于							GT 		 带符号数大于
	MI		  负数									LE 		 带符号数小于等于
	PL		　　非负数									AL       无条件执行
	VS        上溢出									NV       该指令从不执行
	VC　　　　　　　　没有上溢出
	HI        无符号数大于

２、ARM指令寻址方式
	立即数寻址：　　MOV  R2, #0xf3 ;寄存器R2的值为0xf3
	寄存器寻址：　　ADD  R0,R1,R2  ;R0 = R1 + R2
	寄存器移位寻址方式：
	ASR   算术右移
	LSL   逻辑左移
	LSR   逻辑右移
	ROR   循环右移
	RRX　　　扩展的循环右移
	eg: 
	MOV R0,R1,LSL #3      ;  R0 = R1 * (2^3)
	ADD R0,R1,R1,LSL #3   ;  R0 = R1 + R1 * (2^3)
	SUB R0,R1,R2,LSR #4   ;  R0 = R1 - R2 /(2^4)
	MOV R0,R1,ROR  R2     ;  R0 = R1循环右移Ｒ２位
	
	Load/Store指令寻址方式：
	Load用于从内存中读取数据放入寄存器中。
	Store用于从寄存器中读取数据保存到内存中。
	LDR    用于从内存中将一个字的数据传送到寄存器中。
３、ARM常用指令集合
	跳转指令：ARM跳转指令可以从当前指令向前或向后的32Ｍ地址空间跳转。
    Ｂ　  跳转指令
	BL   带返回的跳转指令
	BX   带状态切换的跳转指令
　　　　BLX  带返回和状态切换的跳转指令s
	数据处理指令：数据处理指令大致分为３类，数据传送指令，算术逻辑运算指令，比较指令。
	MOV   数据传送指令
	MVN   数据求反传送指令
　　　　CMP　　　比较指令
	CMN   基于相反数的比较指令
	TST   位测试指令
	TEQ   相等测试指令
　　　　ADD   加法指令
　　　　SUB   减法指令
    RSB   逆向减法指令
    ADC   带位加法指令
　　　　SBC   带位减法指令
　　　　RSC   带位逆向减法指令
	AND   逻辑与操作指令
　　　　BIC   位清除指令
　　　　EOR   逻辑异或操作指令
　　　 ORR   逻辑或操作指令
　　　　MUL   32位乘法指令　　　　　   MUL  R0,R1,R2       ;R0 = R1 * R2
　　　　MLA   32位带加数的乘法指令     MLA  R0,R1,R2,R3    ;R0 = R1 * R2 + R3
　　　　SMULL 64位有符号数乘法指令		SMULL R0,R1,R2,R3    ; R0 = R2*R3 //低32位
													   R1 = R2*R3 //高32位			
　　　　SMLAL 64位带加数的有符号数乘法指令
　　　　UMULL 64位无符号数乘法指令
　　　　UMLAL 64位带加数的无符号数乘法指令
    CLZ   前导０个数计算指令
    状态寄存器访问指令：ARM中有两条指令用于在状态寄存器和通用寄存器之间传送数据
	MRS    状态寄存器到通用寄存器的传送指令
　　　　MSR    通用寄存器到状态寄存器的传送指令
　　　　MRS  R0,CPSR          ;读取CPSR到R0寄存器
    BIC  R0,R0,#0x1F      ;修改，去除当前处理器模式
	ORR  R0,R0,#0x13      ;修改，设置特权模式
    MSR  CPSR_c,R0        ;写回，仅仅修改CPSR中的控制位域
	Load/Store内存访问指令
	LDR        字数据读取指令　　　　　　　　LDR     R0,[R1,#4]    ;将内存单元R1+4中的字读取到R0寄存器中
　　　　LDRB       字节数据读取指令            LDRB    R0,[R1]       ;将内存单元(R1)中的字节数据读取到R0中,R0中高24位设置成了０
　　　　LDRBT      用户模式的字节数据读取指令
　　　　LDRH       半字数据读取指令            LDRH    R0,[R1]       ;将内存单元(R1)中的字节数据读取到R0中,R0中高16位设置成了０
	LDRSB      有符号的字节数据读取指令     LDRSB   R0,[R1,#3]    ;将内存单元(R1+3)中的有符号字节数据读取到R0中，R0中高24位设置成该字节数据的符号位
　　　　LDRSH      有符号的半字数据读取指令     LDRSH   R0,[R1,#3]    ;将内存单元(R1+3)中的有符号字节数据读取到R0中，R0中高16位设置成该字节数据的符号位
　　　　LDRT       用户模式的字数据读取指令
　　　　STR        字数据写入指令				 STR     R0,[R1,#0x100]   ;将R0中的自数据保存到内存单元(R1 + 0x100)中
　　　　STRB       字节数据写入指令            STRB    R3,[R5,#0x200]   ;将R3中的低８位数据保存到内存地址(R5+0x200)中
    STRBT      用户模式下字节数据写入指令
　　　　STRH       半字数据写入指令
　　　　STRT       用户模式下字数据写入指令
	批量Load/Store内存访问指令：批量Load/Store内存访问指令可以一次从连续的内存单元中读取数据，传送到指令中的内存列表中的各个寄存器中,同时也可以将指令中寄存器列表中的各个寄存器值写入到内存中。
	LDM(1)     批量内存字数据读取指令
　　　　LDM(2)     用户模式下的批量内存字数据读取指令
　　　　LDM(3)     带状态寄存器的批量内存字数据读取指令
　　　　STM(1)     批量内存字数据写入指令
　　　　STM(2)　　　　　用户模式下的批量内存字数据写入指令
　　信号量操作指令：
　　　　SWP        交换指令     SWP R1,R2,[R3]   ;将内存单元(R3)中字数据读取到R1寄存器中，同时将R2寄存器的数据写入到内存单元(R3)中
    SWPB       字节交换指令
    异常中断产生指令：
	SWI(软中断指令)：用于产生软中断。
	BKPT：断点中断指令，用于产生软件断点中断。
４、ARM协处理器指令
	CDP       协处理器数据操作指令
　　　　LDC       协处理器数据读取指令
　　　　STC       协处理器数据写入指令
　　　　MCR       ARM寄存器到协处理器寄存器的数据传送指令
　　　　MRC       协处理器寄存器到ARM寄存器的数据传送指令
    
